% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainer.R
\name{trainer}
\alias{trainer}
\title{Train a model using a specified objective function and optimizer}
\usage{
trainer(objective, optimizer, tol = 1e-05, epochs = 10000, ...)
}
\arguments{
\item{objective}{A function implementing the objective function (cost and gradient) to be optimized.}

\item{optimizer}{A function implementing the optimizer algorithm to update model parameters.}

\item{tol}{A numeric value specifying the tolerance for convergence. Defaults to 1e-5.}

\item{epochs}{An integer specifying the maximum number of training epochs. Defaults to 10000.}

\item{...}{Additional arguments passed to the objective function and optimizer.}
}
\value{
A function that fits model parameter and history of costs.
\subsection{Arguments}{
\itemize{
\item \code{train_x} Training data (covariates). It should be a numeric matrix.
\item \code{train_y} Training data (target). It should be a numeric vector.
\itemize{
\item For binary classification problem, class should be 1 or -1.
}
\item \code{batch_size} An integer specifying the number of training examples used in each update step (mini-batch size).
\itemize{
\item Set to \code{"full"} to use the entire dataset in each update.
}
\item \code{param_init} A numeric vector of initial values for model parameters.
\itemize{
\item If not provided, all parameters are initialized to 0.
}
\item \code{...} Additional arguments passed to the objective function and optimizer.
}
}

\subsection{Value}{
\itemize{
\item A list containing:
\itemize{
\item \code{params}: Fitted model parameters.
\item \code{cost_history}: History of cost values during training.
}
}
}
}
\description{
This function trains a model using a given objective function (\code{objective}),
optimizer (\code{optimizer}), and training data (\code{train_x}, \code{train_y}). It supports mini-batch training
and early stopping based on convergence criteria.
}
\examples{
# Data Generation
train_x <- matrix(rnorm(10 * 2), nrow = 10)
train_y <- rnorm(10)

# Train the model#'
LRL_objective <- l2_obj(type = 'linear', lambda=0.1, loss = 'logistic')
LRL_trainer <- trainer(LRL_objective, SGD_optim(), tol = 1e-5)
result <- LRL_trainer(train_x, train_y, batch_size = 64)
plot(result$cost_history, xlab = 'epoch', ylab = 'cost function', pch=20)
}
