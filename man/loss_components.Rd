% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loss_functions.R
\name{loss_components}
\alias{loss_components}
\title{Compute input of loss function and gradients}
\usage{
loss_components(type)
}
\arguments{
\item{type}{A character string specifying the type of input function.
\itemize{
\item 'reg' or 'regression' : Used for regression problem.
\item 'binary' : Used for binary classification problem.
}}
}
\value{
A function computes input functions and their gradients based on the provided loss type.
\subsection{Arguments}{
\itemize{
\item \code{train_y} A numeric vector of true target values.
\item \code{f_hat} A numeric vector of decision function value
}
}

\subsection{Value}{
\itemize{
\item A named list containing \code{u} (loss input) and \code{du} (gradient of the loss input)
}
}
}
\description{
This function defines function of the core components of various loss functions,
including both the loss input (\code{u}) and its gradient(\code{du}).
It currently supports regression ('reg', 'regression') and and binary classification ('binary') problem.
The specific components differ depending on the chosen \code{type}.
}
\examples{
# Regression example
reg_input_func <- loss_components("reg")
reg_loss_input <- reg_input_func(train_y = rnorm(10), f_hat = rnorm(10))
reg_loss_input$u # input value of loss function
reg_loss_input$du # Access gradients

# Binary classification example
bin_input_func <- loss_components("binary")
bin_loss_input <- bin_input_func(train_y = rbinom(10, 1, 0.5), f_hat = rnorm(10))
bin_loss_input$u # input value of loss function
bin_loss_input$du # Access gradients
}
